/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Address, HexString, Val, Struct } from "@alephium/web3";
import { default as allStructsJson } from "../structs.ral.json";
export const AllStructs = allStructsJson.map((json) => Struct.fromJson(json));
export interface CurrentPoolInfo extends Record<string, Val> {
  tick: bigint;
  feeGrowthGlobal0X128: bigint;
  feeGrowthGlobal1X128: bigint;
}
export interface FactoryProtectedData extends Record<string, Val> {
  balance0: bigint;
  balance1: bigint;
}
export interface FactoryRoles extends Record<string, Val> {
  deployer: Address;
  protocolFeeSetter: Address;
  feeSink: Address;
  admin: Address;
  upgrader: Address;
}
export interface ModifyLiquidity extends Record<string, Val> {
  owner: Address;
  tickLower: bigint;
  tickUpper: bigint;
  liquidityDelta: bigint;
  salt: HexString;
}
export interface ModifyLiquidityScriptParams extends Record<string, Val> {
  tickLower: bigint;
  tickUpper: bigint;
  liquidityDelta: bigint;
  amount0Min: bigint;
  amount1Min: bigint;
  salt: HexString;
}
export interface NewStruct extends Record<string, Val> {
  newField: bigint;
}
export interface NextTick extends Record<string, Val> {
  value: bigint;
  initialized: boolean;
}
export interface PendingBalance extends Record<string, Val> {
  user: bigint;
  protocol: bigint;
}
export interface PoolData extends Record<string, Val> {
  liquidity: bigint;
  feeGrowthGlobal0X128: bigint;
  feeGrowthGlobal1X128: bigint;
  protocolFees0: bigint;
  protocolFees1: bigint;
  sqrtPriceX96: bigint;
  tick: bigint;
  observationIndex: bigint;
  observationCardinality: bigint;
  observationCardinalityNext: bigint;
  feeProtocol: bigint;
  unlocked: boolean;
}
export interface PoolKey extends Record<string, Val> {
  token0: HexString;
  token1: HexString;
  tickSpacing: bigint;
  feePerMil: bigint;
}
export interface Position extends Record<string, Val> {
  liquidity: bigint;
  feeGrowthInside0LastX128: bigint;
  feeGrowthInside1LastX128: bigint;
  feeOwed0: bigint;
  feeOwed1: bigint;
}
export interface PositionKey extends Record<string, Val> {
  owner: Address;
  tickLower: bigint;
  tickUpper: bigint;
  salt: HexString;
}
export interface TickInfo extends Record<string, Val> {
  liquidityNet: bigint;
  liquidityGross: bigint;
  feeGrowthOutside0X128: bigint;
  feeGrowthOutside1X128: bigint;
}
export interface TickUpdateInfo extends Record<string, Val> {
  tick: bigint;
  liquidityGross: bigint;
  hasFlipped: boolean;
}
