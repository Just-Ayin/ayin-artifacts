/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Address,
  ExecutableScript,
  ExecuteScriptParams,
  ExecuteScriptResult,
  Script,
  SignerProvider,
  HexString,
} from "@alephium/web3";
import { getContractByCodeHash } from "./contracts";
import { default as ModifyLiquidityScriptScriptJson } from "../clamm/scripts/ModifyLiquidityScript.ral.json";
import { default as RouterGoScriptJson } from "../router/RouterGo.ral.json";
import {
  CurrentPoolInfo,
  FactoryProtectedData,
  FactoryRoles,
  ModifyLiquidity,
  ModifyLiquidityScriptParams,
  NewStruct,
  NextTick,
  PendingBalance,
  PoolData,
  PoolKey,
  Position,
  PositionKey,
  TickInfo,
  TickUpdateInfo,
  AllStructs,
} from "./types";

export const ModifyLiquidityScript = new ExecutableScript<{
  factoryId: HexString;
  key: PoolKey;
  params: ModifyLiquidityScriptParams;
}>(
  Script.fromJson(ModifyLiquidityScriptScriptJson, "", AllStructs),
  getContractByCodeHash
);

export const RouterGo = new ExecutableScript<{
  router: HexString;
  tokenIn: HexString;
  amountIn: bigint;
  tokenOut: HexString;
  minAmountOut: bigint;
  payer: Address;
  beneficiary: Address;
  encoded: HexString;
}>(Script.fromJson(RouterGoScriptJson, "", AllStructs), getContractByCodeHash);
